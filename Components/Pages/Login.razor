


@page "/login"
@using coursework.Models
@using coursework.Services
@inject UserService UserService
@inject NavigationManager NavigationManager


<link rel="stylesheet" href="css/styles.css">

<div class="login-container">
    <div class="login-card">
        <h2 class="login-title">Login</h2>
        <div class="form-group">
            <label for="username" class="form-label">Username</label>
            <input id="username" class="form-input" @bind="LoginUsername" placeholder="Enter your username" />
        </div>
        <div class="form-group">
            <label for="password" class="form-label">Password</label>
            <div class="password-wrapper">
                <input id="password" class="form-input" @bind="LoginPassword" type="password" placeholder="Enter your password" />
                <i class="fas fa-eye password-toggle" onclick="togglePasswordVisibility('password')"></i>
            </div>
        </div>
        <button class="form-button" @onclick="PerformLogin">Login</button>
        
        @if (!string.IsNullOrEmpty(Message))
        {
            <p class="message">@Message</p>
        }

        <p class="register-link">
            Don't have an account? <a href="register" class="register-link-text">Register</a>
        </p>
    </div>
</div>


@code {
   
}

<script>
    function togglePasswordVisibility(id) {
        const passwordField = document.getElementById(id);
        const eyeIcon = passwordField.nextElementSibling;
        if (passwordField.type === "password") {
            passwordField.type = "text";
            eyeIcon.classList.remove("fa-eye");
            eyeIcon.classList.add("fa-eye-slash");
        } else {
            passwordField.type = "password";
            eyeIcon.classList.remove("fa-eye-slash");
            eyeIcon.classList.add("fa-eye");
        }
    }
</script>

@code {
    private string LoginUsername = "";
    private string LoginPassword = "";
    private string Message = "";

    private async Task PerformLogin()
    {
        if (string.IsNullOrWhiteSpace(LoginUsername) || string.IsNullOrWhiteSpace(LoginPassword))
        {
            Message = "Please enter both username and password.";
            return;
        }

        if (UserService.Login(LoginUsername, LoginPassword))
        {
            Message = "Login successful. Redirecting to dashboard...";
            await Task.Delay(2000);  // Wait for the message to display
            NavigationManager.NavigateTo("/dashboard");  // Redirect to the dashboard page
        }
        else
        {
            Message = "Invalid username or password.";
        }
    }
} 